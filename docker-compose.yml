version: '3.5'

services:
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: .
      #Only will build development stage from our dockerfile
      target: ${BUILD_ENV}
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - 3000:3000
    networks:
      - postgres
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres
    container_name: local_pgdb
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - 55000:5432
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - postgres
  redis:
    image: redis
    container_name: local_redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data

networks:
  postgres:
    driver: bridge

volumes:
  redis:
    driver: local
  postgres:
  pgadmin: